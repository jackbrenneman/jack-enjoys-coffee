{"version":3,"sources":["consts.js","nav/topnav.js","nav/footer.js","sections/home.js","sections/under_construction.js","sections/blog.js","sections/coffee.js","sections/equipment.js","sections/data.js","sections/coffee_entry/inputs/general_info_input.js","sections/coffee_entry/helpers/autocomplete_container.js","temp_db.js","sections/coffee_entry/inputs/coffee_info_input.js","sections/coffee_entry/inputs/brew_info/method_brewer_drink_type_input.js","sections/coffee_entry/helpers/input_helpers.js","sections/coffee_entry/inputs/brew_info/brew_info_input.js","sections/coffee_entry/inputs/rating_input.js","sections/coffee_entry/inputs/notes_input.js","sections/coffee_entry/coffee_entry_container.js","sections/data_entry/new_coffee_input.js","sections/data_entry/new_origin_input.js","sections/data_entry/new_roaster_input.js","sections/data_entry/new_brewer_input.js","sections/data_entry/new_water_input.js","sections/data_entry/new_grinder_input.js","sections/data_entry/new_drink_input.js","sections/data_entry/data_entry_container.js","graphql/queries/data_entry_queries.js","App.js","serviceWorker.js","index.js","media/icons/coffee-icon.png"],"names":["drawerPages","name","icon","path","currentDataDefault","brewers","coffees","drinks","grinders","methods","origins","processes","roasters","waters","dataEntryDefault","dataOption","brewer","website","method_id","coffee","roaster_id","process_id","origin_id","drink","grinder","origin","roaster","city","state","country","water","description","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","defaultCoffeeEntry","date","process","brew","method","grind","setting","coffee_in","out","rating","note","coffeePropTypesShape","PropTypes","string","number","grindPropTypesShape","brewPropTypesShape","shape","isRequired","func","TopNav","classes","makeStyles","theme","root","background","menuButton","color","marginRight","title","navLink","textDecoration","activeNavLink","useStyles","useState","drawerOpen","setDrawerOpen","handleDrawerToggle","container","undefined","window","document","body","Box","AppBar","className","position","Toolbar","IconButton","disableRipple","edge","aria-label","size","onClick","Typography","variant","p","display","justifyContent","to","src","logo","alt","width","height","Drawer","anchor","open","onClose","ModalProps","keepMounted","List","map","key","activeClassName","pr","ListItem","button","ListItemIcon","ListItemText","primary","Footer","drawerPagesMinusHome","slice","Grid","align","item","xs","sm","Home","home","backgroundColor","minHeight","UnderConstruction","fontSize","Blog","Coffee","Equipment","Data","data","defaultProps","user","entries","GeneralInfoInput","coffeeEntry","setCoffeeEntry","form","justify","spacing","autoComplete","TextField","id","type","defaultValue","onChange","e","target","value","SelectProps","native","AutocompleteWrapper","options","textField","setValue","filter","createFilterOptions","Autocomplete","event","newValue","inputValue","filterOptions","params","filtered","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","methodData","methodToBrewerMap","0","1","2","grinderData","originData","waterData","methodToDrinkMap","processData","ratingsInputData","nameData","roasterData","3","CoffeeInfoInput","fieldName","Object","values","label","select","parseInt","MethodBrewerAndDrinkTypeInput","drinkOptions","brewerOptions","methodValue","getBrewerOptions","BrewInfoInput","formInOut","RatingInput","NotesInput","placeholder","multiline","CoffeeDataEntryContainer","page","section","maxWidth","submitButton","coffeeIcon","sections","component","direction","alignItems","Button","startIcon","endIcon","NewCoffeeInput","dataEntry","setDataEntry","console","log","NewOriginInput","NewRoasterInput","NewBrewerInput","NewWaterInput","pb","pt","NewGrinderInput","currentGrinders","NewDrinkInput","DataEntryContainer","currentData","setCurrentData","useEffect","fetch","headers","Accept","JSON","stringify","query","then","r","json","py","FormControl","RadioGroup","row","FormControlLabel","control","Radio","labelPlacement","Divider","currentBrewers","currentCoffees","currentDrinks","currentOrigins","currentRoasters","currentWaters","getDataEntryForm","history","createBrowserHistory","App","createMuiTheme","typography","fontFamily","join","h2","fontWeight","lineHeight","letterSpacing","ThemeProvider","exact","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.8c2f0d79.chunk.js","sourcesContent":["/**\n * Constants and such.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\n\nexport const drawerPages = [\n  {\n    name: 'Home',\n    icon: <HomeIcon />,\n    path: '/home',\n  },\n  {\n    name: 'Data',\n    icon: <AssessmentIcon />,\n    path: '/data',\n  },\n  {\n    name: 'Coffee',\n    icon: <LocalCafeIcon />,\n    path: '/coffee',\n  },\n  {\n    name: 'Equipment',\n    icon: <BuildIcon />,\n    path: '/equipment',\n  },\n  {\n    name: 'Blog',\n    icon: <LibraryBooksIcon />,\n    path: '/blog',\n  },\n];\n\nexport const drinkEnum = 'DRINK';\nexport const grinderEnum = 'GRINDER';\nexport const roasterEnum = 'ROASTER';\nexport const coffeeEnum = 'COFFEE';\nexport const originEnum = 'ORIGIN';\nexport const brewerEnum = 'BREWER';\nexport const waterEnum = 'WATER';\n\nexport const currentDataDefault = {\n  brewers: [],\n  coffees: [],\n  drinks: [],\n  grinders: [],\n  methods: [],\n  origins: [],\n  processes: [],\n  roasters: [],\n  waters: [],\n};\n\nexport const dataEntryDefault = {\n  dataOption: originEnum,\n  brewer: {\n    name: '',\n    website: '',\n    method_id: 0,\n  },\n  coffee: {\n    name: '',\n    roaster_id: '',\n    process_id: 0,\n    origin_id: '',\n  },\n  drink: {\n    name: '',\n    method_id: 0,\n  },\n  grinder: {\n    name: '',\n    website: '',\n  },\n  origin: {\n    name: '',\n  },\n  roaster: {\n    name: '',\n    city: '',\n    state: '',\n    country: '',\n    website: '',\n  },\n  water: {\n    name: '',\n    description: '',\n  },\n};\n\n// Used for the default time. Defaults to current day.\nconst currentDate = new Date();\nconst year = currentDate.getFullYear();\nconst month = currentDate.getMonth() + 1;\nconst day = currentDate.getDate();\nconst defaultDate = `${year}-${month > 9 ? month : `0${month}`}-${day}`;\n\n// Default state for a coffee entry\nexport const defaultCoffeeEntry = {\n  date: defaultDate,\n  coffee: {\n    name: '',\n    roaster: '',\n    origin: '',\n    process: 0,\n  },\n  brew: {\n    method: 0,\n    brewer: 0,\n    drink: 0,\n    grind: {\n      grinder: '',\n      setting: null,\n    },\n    water: '',\n    coffee_in: null,\n    out: null,\n  },\n  rating: 8,\n  note: '',\n};\n\n// All the Coffee info for a coffee entry\nconst coffeePropTypesShape = {\n  name: PropTypes.string,\n  roaster: PropTypes.string,\n  origin: PropTypes.string,\n  process: PropTypes.number,\n};\n\n// All the Grind info for a coffee entry\nconst grindPropTypesShape = {\n  grinder: PropTypes.string,\n  setting: PropTypes.number,\n};\n\n// All the Brew Info for a coffee entry\nconst brewPropTypesShape = {\n  method: PropTypes.number,\n  brewer: PropTypes.number,\n  drink: PropTypes.number,\n  grind: PropTypes.shape(grindPropTypesShape),\n  water: PropTypes.string,\n  coffee_in: PropTypes.number,\n  out: PropTypes.number,\n};\n\nexport const coffeeEntryPropTypesShape = {\n  coffeeEntry: PropTypes.shape({\n    date: PropTypes.string,\n    coffee: PropTypes.shape(coffeePropTypesShape),\n    brew: PropTypes.shape(brewPropTypesShape),\n    rating: PropTypes.number,\n    note: PropTypes.string,\n  }).isRequired,\n  setCoffeeEntry: PropTypes.func.isRequired,\n};\n","/**\n * The top navigation bar.\n */\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport logo from '../media/icons/coffee-icon.png';\nimport { drawerPages } from '../consts.js';\n\nfunction TopNav() {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      background: 'grey',\n    },\n    menuButton: {\n      color: 'white',\n      marginRight: '5%',\n    },\n    title: {\n      color: 'white',\n    },\n    navLink: {\n      textDecoration: 'none',\n      color: 'black',\n    },\n    activeNavLink: {\n      color: 'brown',\n    },\n  }));\n  const classes = useStyles();\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const container =\n    window !== undefined ? () => window.document.body : undefined;\n\n  return (\n    <Box>\n      <AppBar className={classes.root} position=\"static\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            disableRipple\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            size=\"small\"\n            onClick={handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            jack-enjoys-coffee\n          </Typography>\n          <Box p={1} display=\"flex\" justifyContent=\"center\">\n            <NavLink className={classes.navLink} to=\"/home\">\n              <img src={logo} alt=\"Coffee Logo\" width=\"30px\" height=\"30px\" />\n            </NavLink>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <nav className=\"Drawer\" aria-label=\"side drawer\">\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={drawerOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          <List>\n            {drawerPages.map(({ name, icon, path }) => (\n              <NavLink\n                className={classes.navLink}\n                key={name}\n                to={path}\n                onClick={handleDrawerToggle}\n                activeClassName={classes.activeNavLink}\n              >\n                <Box pr={2}>\n                  <ListItem button>\n                    <ListItemIcon>{icon}</ListItemIcon>\n                    <ListItemText primary={name} />\n                  </ListItem>\n                </Box>\n              </NavLink>\n            ))}\n          </List>\n        </Drawer>\n      </nav>\n    </Box>\n  );\n}\n\nexport default TopNav;\n","/**\n * This isn't really a footer but wasn't sure what to call it yet.\n */\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { drawerPages } from '../consts.js';\n\nfunction Footer() {\n  const drawerPagesMinusHome = drawerPages.slice(1);\n\n  const useStyles = makeStyles((theme) => ({\n    navLink: {\n      textDecoration: 'none',\n      color: 'black',\n    },\n    activeNavLink: {\n      color: 'brown',\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <Box p={4}>\n      <Grid container align=\"center\">\n        {drawerPagesMinusHome.map(({ name, icon, path }) => (\n          <Grid item xs={6} sm={3} key={name}>\n            <Box p={2}>\n              <NavLink\n                className={classes.navLink}\n                to={path}\n                activeClassName={classes.activeNavLink}\n              >\n                <Box>{icon}</Box>\n                <Box>\n                  <Typography>{name}</Typography>\n                </Box>\n              </NavLink>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Footer;\n","/**\n * Home page.\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport logo from '../media/icons/coffee-icon.png';\nimport Box from '@material-ui/core/Box';\nimport Footer from '../nav/footer';\n\nfunction Home() {\n  const useStyles = makeStyles((theme) => ({\n    home: {\n      backgroundColor: '#EEEEEE',\n      minHeight: '100vh',\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.home} p={4}>\n      <Box p={4} display=\"flex\" justifyContent=\"center\">\n        <Typography variant=\"h2\">jack-enjoys-coffee</Typography>\n      </Box>\n      <Box p={1} display=\"flex\" justifyContent=\"center\">\n        <img src={logo} alt=\"Coffee Logo\" />\n      </Box>\n      <Box p={4} display=\"flex\" justifyContent=\"center\">\n        <Typography variant=\"body1\" align=\"center\">\n          Welcome! This is a site for Jack and his love for coffee. I want to be\n          able to track all the coffee I've tried and my drinking habits. I also\n          wanted to create a simple website from start to finish. Eventually, I\n          hope to make some visualizations on the data that I've been recording.\n        </Typography>\n      </Box>\n      <Box p={4} display=\"flex\" justifyContent=\"center\">\n        <Typography variant=\"body1\" align=\"center\">\n          You can click the hamburger icon in the top left of this page in order\n          to open the side drawer and navigate to other sections, or you can\n          just click on one of the buttons below to look around. Thanks for\n          checking out the site!\n        </Typography>\n      </Box>\n      <Footer />\n    </Box>\n  );\n}\n\nexport default Home;\n","/**\n * Under construction page to let people know it's being built.\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\n\nfunction UnderConstruction() {\n  const useStyles = makeStyles((theme) => ({\n    home: {\n      backgroundColor: '#EEEEEE',\n      minHeight: '100vh',\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.home} p={10}>\n      <Box p={4} display=\"flex\" justifyContent=\"center\">\n        <ReportProblemIcon fontSize=\"large\" />\n      </Box>\n      <Box p={4} display=\"flex\" justifyContent=\"center\">\n        <Typography variant=\"h2\" align=\"center\">\n          This page is under construction! Come back later.\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default UnderConstruction;\n","/**\n * Blog. Do I even wanna do this? I dunno.\n */\nimport React from 'react';\nimport UnderConstruction from '../sections/under_construction';\n\nfunction Blog() {\n  return <UnderConstruction />;\n}\n\nexport default Blog;\n","/**\n * Coffee page. I don't know what this is yet, but I feel like there needs to be a coffee page on a coffee site.\n */\nimport React from 'react';\nimport UnderConstruction from '../sections/under_construction';\n\nfunction Coffee() {\n  return <UnderConstruction />;\n}\n\nexport default Coffee;\n","/**\n * Equipment page. Dunno if I'll do this page but it's here.\n */\nimport React from 'react';\nimport UnderConstruction from '../sections/under_construction';\n\nfunction Equipment() {\n  return <UnderConstruction />;\n}\n\nexport default Equipment;\n","/**\n * All of the current coffee data for a user.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../media/icons/coffee-icon.png';\nimport { NavLink } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\n\nfunction Data() {\n  const useStyles = makeStyles((theme) => ({\n    data: {\n      backgroundColor: '#EEEEEE',\n      minHeight: '100vh',\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.data} p={4} display=\"flex\" justifyContent=\"center\">\n      <Grid container align=\"center\">\n        <Grid item xs={12}>\n          <Box p={4}>\n            <Typography variant=\"body1\" align=\"center\">\n              Click on the button below to input a Coffee Journal Entry\n            </Typography>\n            <Box p={2}>\n              <NavLink\n                className={classes.navLink}\n                to={'/data/coffee_entry'}\n                activeClassName={classes.activeNavLink}\n              >\n                <Box p={1}>\n                  <img src={logo} alt=\"Coffee Logo\" />\n                </Box>\n              </NavLink>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box p={4}>\n            <Typography variant=\"body1\" align=\"center\">\n              Click on the button below to input a new Roaster, Coffee, or\n              Origin\n            </Typography>\n            <Box p={2}>\n              <NavLink\n                className={classes.navLink}\n                to={'/data/entry'}\n                activeClassName={classes.activeNavLink}\n              >\n                <Box p={1}>\n                  <img src={logo} alt=\"Coffee Logo\" />\n                </Box>\n              </NavLink>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box p={4}>\n            <Typography variant=\"body1\" align=\"center\">\n              Here is where your data will be when you put in some journal\n              entries!\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nData.propTypes = {\n  user: PropTypes.string.isRequired,\n  entries: PropTypes.array.isRequired,\n};\n\nData.defaultProps = {\n  user: '',\n  entries: [],\n};\n\nexport default Data;\n","/**\n * The General Info for a Coffee Entry. Contains:\n *    - Date\n *    - Time of Day\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { coffeeEntryPropTypesShape } from '../../../consts.js';\n\nfunction GeneralInfoInput({ coffeeEntry, setCoffeeEntry }) {\n  const { date } = coffeeEntry;\n\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleDateChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      date: e.target.value,\n    });\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" align=\"center\">\n          General Info\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Date\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"date\"\n                type=\"date\"\n                defaultValue={date}\n                onChange={handleDateChange}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"outlined\"\n              />\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneralInfoInput.propTypes = coffeeEntryPropTypesShape;\n\nexport default GeneralInfoInput;\n","/**\n * An autocomplete component wrapper. Unsure if I'm gonna go this route for adding new stuff.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, {\n  createFilterOptions,\n} from '@material-ui/lab/Autocomplete';\n\nfunction AutocompleteWrapper({ onChange, options, textField }) {\n  const [value, setValue] = useState(null);\n  const filter = createFilterOptions();\n\n  const handleOnChange = (event, newValue) => {\n    if (typeof newValue === 'string') {\n      // I am still unsure when this ever happens tbh\n      setValue({\n        name: newValue,\n      });\n    } else if (newValue && newValue.inputValue) {\n      const name = newValue?.inputValue;\n      // Create a new value from the user input\n      // setValue will literally just update the autocomplete component itself\n      setValue({\n        name,\n      });\n      // onChange is the function supplied that will update state\n      onChange(name ? name : '');\n    } else {\n      const name = newValue?.name;\n      // The user chose something that was already an option\n      // setValue will literally just update the autocomplete component itself\n      setValue(newValue);\n      // onChange is the function supplied that will update state\n      onChange(name ? name : '');\n    }\n  };\n\n  const filterOptions = (options, params) => {\n    const filtered = filter(options, params);\n\n    // Suggest the creation of a new value\n    if (params.inputValue !== '') {\n      filtered.push({\n        inputValue: params.inputValue,\n        name: `Add \"${params.inputValue}\"`,\n      });\n    }\n\n    return filtered;\n  };\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={handleOnChange}\n      filterOptions={filterOptions}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"autcomplete-with-add-option\"\n      options={options}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.name;\n      }}\n      renderOption={(option) => option.name}\n      freeSolo\n      renderInput={textField}\n    />\n  );\n}\n\nAutocompleteWrapper.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  textField: PropTypes.func.isRequired,\n};\n\nexport default AutocompleteWrapper;\n","/**\n * Temp DB for when DB calls fail and for general testing.\n */\nexport const methodData = [\n  {\n    name: 'Espresso',\n    value: 0,\n  },\n  {\n    name: 'Pour Over',\n    value: 1,\n  },\n  {\n    name: 'Immersion',\n    value: 2,\n  },\n];\n\nconst espressoBrewerData = [\n  {\n    name: 'Flair Pro 2',\n    value: 0,\n    method: 0,\n  },\n  {\n    name: 'Flair Signature 2',\n    value: 1,\n    method: 0,\n  },\n  {\n    name: 'Lelit Mara',\n    value: 2,\n    method: 0,\n  },\n];\n\nconst pourOverBrewerData = [\n  {\n    name: 'Stagg X',\n    value: 0,\n    method: 1,\n  },\n  {\n    name: 'Stagg XF',\n    value: 1,\n    method: 1,\n  },\n  {\n    name: 'Kalita Wave',\n    value: 2,\n    method: 1,\n  },\n  {\n    name: 'V60',\n    value: 3,\n    method: 1,\n  },\n];\n\nconst immersionBrewerData = [\n  {\n    name: 'Aeropress',\n    value: 0,\n    method: 2,\n  },\n  {\n    name: 'French Press',\n    value: 1,\n    method: 2,\n  },\n  {\n    name: 'Toddy',\n    value: 2,\n    method: 2,\n  },\n];\n\nexport const methodToBrewerMap = {\n  0: espressoBrewerData,\n  1: pourOverBrewerData,\n  2: immersionBrewerData,\n};\n\nexport const grinderData = [\n  {\n    name: 'Comandante Red Clix',\n    value: 0,\n  },\n  {\n    name: 'Comandante',\n    value: 1,\n  },\n  {\n    name: 'Niche',\n    value: 2,\n  },\n  {\n    name: 'Pre-ground',\n    value: 3,\n  },\n];\n\nexport const originData = [\n  {\n    name: 'Ethiopia',\n    value: 0,\n  },\n  {\n    name: 'Yemen',\n    value: 1,\n  },\n  {\n    name: 'Brazil',\n    value: 2,\n  },\n  {\n    name: 'Costa Rica',\n    value: 3,\n  },\n];\n\nexport const waterData = [\n  {\n    name: 'Boston Tap',\n    value: 0,\n  },\n  {\n    name: 'Vermont Tap',\n    value: 1,\n  },\n  {\n    name: 'Homemade',\n    value: 2,\n  },\n];\n\nconst espressoDrinkData = [\n  {\n    name: 'Straight Espresso',\n    value: 0,\n    method: 0,\n  },\n  {\n    name: 'Americano',\n    value: 1,\n    method: 0,\n  },\n  {\n    name: 'Cortado',\n    value: 2,\n    method: 0,\n  },\n  {\n    name: 'Flat White',\n    value: 3,\n    method: 0,\n  },\n  {\n    name: 'Cappacino',\n    value: 4,\n    method: 0,\n  },\n  {\n    name: 'Latte',\n    value: 5,\n    method: 0,\n  },\n  {\n    name: 'Mocha',\n    value: 6,\n    method: 0,\n  },\n  {\n    name: 'Iced Latte',\n    value: 7,\n    method: 0,\n  },\n];\n\nconst pourOverDrinkData = [\n  {\n    name: 'Normal',\n    value: 0,\n    method: 1,\n  },\n  {\n    name: 'Japanese Iced Coffee',\n    value: 1,\n    method: 1,\n  },\n];\n\nconst immersionDrinkData = [\n  {\n    name: 'Hot Brew',\n    value: 0,\n    method: 2,\n  },\n  {\n    name: 'Cold Brew',\n    value: 1,\n    method: 2,\n  },\n  {\n    name: 'Nitro Cold Brew',\n    value: 2,\n    method: 2,\n  },\n];\n\n// const allDrinkData = [espressoDrinkData, pourOverDrinkData, immersionDrinkData];\n\nexport const methodToDrinkMap = {\n  0: espressoDrinkData,\n  1: pourOverDrinkData,\n  2: immersionDrinkData,\n};\n\nexport const timeOfDayData = [\n  {\n    name: 'Morning',\n    value: 0,\n  },\n  {\n    name: 'Afternoon',\n    value: 1,\n  },\n  {\n    name: 'Night',\n    value: 2,\n  },\n];\n\nexport const processData = [\n  {\n    name: 'Washed',\n    value: 0,\n  },\n  {\n    name: 'Natural',\n    value: 1,\n  },\n  {\n    name: 'Honey',\n    value: 2,\n  },\n  {\n    name: 'Other',\n    value: 3,\n  },\n];\n\nexport const ratingsInputData = [\n  {\n    name: 1,\n    value: 0,\n  },\n  {\n    name: 1.5,\n    value: 1,\n  },\n  {\n    name: 2,\n    value: 2,\n  },\n  {\n    name: 2.5,\n    value: 3,\n  },\n  {\n    name: 3,\n    value: 4,\n  },\n  {\n    name: 3.5,\n    value: 5,\n  },\n  {\n    name: 4,\n    value: 6,\n  },\n  {\n    name: 4.5,\n    value: 7,\n  },\n  {\n    name: 5,\n    value: 8,\n  },\n  {\n    name: 5.5,\n    value: 9,\n  },\n  {\n    name: 6,\n    value: 10,\n  },\n  {\n    name: 6.5,\n    value: 11,\n  },\n  {\n    name: 7,\n    value: 12,\n  },\n  {\n    name: 7.5,\n    value: 13,\n  },\n  {\n    name: 8,\n    value: 14,\n  },\n  {\n    name: 8.5,\n    value: 15,\n  },\n  {\n    name: 9,\n    value: 16,\n  },\n  {\n    name: 9.5,\n    value: 17,\n  },\n  {\n    name: 10,\n    value: 18,\n  },\n];\n\nexport const nameData = {\n  0: {\n    id: 0,\n    name: 'Test Name',\n  },\n};\n\nexport const roasterData = {\n  0: {\n    roaster_id: 0,\n    name: 'Little Wolf',\n    city: 'Ipswhich',\n    state: 'Massachusetts',\n    country: 'United States',\n    website: 'https://littlewolf.coffee/',\n  },\n  1: {\n    roaster_id: 1,\n    name: 'Tandem',\n    city: 'Portland',\n    state: 'Maine',\n    country: 'United States',\n    website: 'https://www.tandemcoffee.com/',\n  },\n  2: {\n    roaster_id: 2,\n    name: 'George Howell',\n    city: 'Acton',\n    state: 'Massachusetts',\n    country: 'United States',\n    website: 'https://www.georgehowellcoffee.com/',\n  },\n  3: {\n    roaster_id: 3,\n    name: 'Abracadabra',\n    city: 'Woodstock',\n    state: 'Vermont',\n    country: 'United States',\n    website: 'https://www.abracadabracoffeeco.com/',\n  },\n};\n\nconst coffeeEntry = {\n  id: 1,\n  time: {\n    date: '1-1-2021',\n    timeOfDay: 0,\n  },\n  coffee: {\n    name: 'Coffee Name',\n    roaster: roasterData[3],\n    origin: 'Mexico',\n    process: 'Natural',\n  },\n  brew: {\n    method: {\n      category: 0,\n      brewer: 'Flair Signature 2',\n      drink: 'Straight Espresso',\n      coffee_in: 14,\n      liquid_out: 30,\n    },\n    grind: {\n      grinder: 'Niche',\n      setting: '14',\n    },\n    water: 'Vermont',\n  },\n  rating: 4,\n  notes:\n    '30s preinfusion and took about 45s. Very thin but super bright and tasty.',\n};\n\nexport const userData = {\n  0: {\n    id: 0,\n    firstName: 'Jack',\n    lastName: 'Brenneman',\n    coffeeEntries: [coffeeEntry],\n  },\n  1: {\n    id: 0,\n    firstName: 'Stanley',\n    lastName: 'Brenneman',\n    coffeeEntries: [coffeeEntry],\n  },\n};\n","/**\n * The Coffee Info for a Coffee Entry. Contains:\n *   - Roaster\n *   - Origin\n *   - Process\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport AutocompleteWrapper from '../helpers/autocomplete_container.js';\nimport { coffeeEntryPropTypesShape } from '../../../consts.js';\nimport {\n  nameData,\n  roasterData,\n  originData,\n  processData,\n} from '../../../temp_db.js';\n\nfunction CoffeeInfoInput({ coffeeEntry, setCoffeeEntry }) {\n  const { coffee } = coffeeEntry;\n  const { process } = coffee;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleNameChange = (name) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      coffee: {\n        ...coffee,\n        name,\n      },\n    });\n  };\n\n  const handleRoasterChange = (roaster) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      coffee: {\n        ...coffee,\n        roaster,\n      },\n    });\n  };\n\n  const handleOriginChange = (origin) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      coffee: {\n        ...coffee,\n        origin,\n      },\n    });\n  };\n\n  const handleProcessChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      coffee: {\n        ...coffee,\n        process: parseInt(e.target.value),\n      },\n    });\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" align=\"center\">\n          Coffee Info\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Name\n            </Typography>\n            <AutocompleteWrapper\n              fieldName=\"name\"\n              onChange={handleNameChange}\n              options={Object.values(nameData)}\n              textField={(params) => (\n                <TextField\n                  {...params}\n                  className={classes.form}\n                  id=\"outlined-text-field-name\"\n                  label=\"Name\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Roaster\n            </Typography>\n            <AutocompleteWrapper\n              fieldName=\"roaster\"\n              onChange={handleRoasterChange}\n              options={Object.values(roasterData)}\n              textField={(params) => (\n                <TextField\n                  {...params}\n                  className={classes.form}\n                  id=\"outlined-text-field-roaster\"\n                  label=\"Roaster\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Origin\n            </Typography>\n            <AutocompleteWrapper\n              fieldName=\"origin\"\n              onChange={handleOriginChange}\n              options={originData}\n              textField={(params) => (\n                <TextField\n                  {...params}\n                  className={classes.form}\n                  id=\"outlined-text-field-origin\"\n                  label=\"Origin\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Process\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-select-process-native\"\n                select\n                value={process}\n                onChange={handleProcessChange}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"outlined\"\n              >\n                {processData.map(({ name, value }) => (\n                  <option value={value} key={name}>\n                    {name}\n                  </option>\n                ))}\n              </TextField>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nCoffeeInfoInput.propTypes = coffeeEntryPropTypesShape;\n\nexport default CoffeeInfoInput;\n","/**\n * The Brew Info for the method and drink type. When the user selects a method, the drink type should update to reflect the different drink types that can be made with that method.\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { coffeeEntryPropTypesShape } from '../../../../consts.js';\nimport { methodData } from '../../../../temp_db.js';\nimport {\n  getBrewerOptions,\n  getDrinkOptions,\n} from '../../helpers/input_helpers.js';\n\nfunction MethodBrewerAndDrinkTypeInput({ coffeeEntry, setCoffeeEntry }) {\n  const { brew } = coffeeEntry;\n  const { method, brewer, drink } = brew;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const drinkOptions = getDrinkOptions(method);\n  const brewerOptions = getBrewerOptions(method);\n\n  const handleMethodChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        method: parseInt(e.target.value),\n        // Change drinkType and brewer back to their defaults\n        drink: 0,\n        brewer: 0,\n      },\n    });\n  };\n\n  const handleDrinkTypeChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        drink: parseInt(e.target.value),\n      },\n    });\n  };\n\n  const handleBrewerChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        brewer: parseInt(e.target.value),\n      },\n    });\n  };\n\n  return (\n    <Grid container justify=\"center\" spacing={2}>\n      <Grid item xs={12} sm={4}>\n        <Typography variant=\"body1\" align=\"center\">\n          Method\n        </Typography>\n        <form autoComplete=\"off\">\n          <TextField\n            className={classes.form}\n            id=\"outlined-select-method-native\"\n            select\n            value={method}\n            onChange={handleMethodChange}\n            SelectProps={{\n              native: true,\n            }}\n            variant=\"outlined\"\n          >\n            {methodData.map(({ name, value }) => (\n              <option value={value} key={name}>\n                {name}\n              </option>\n            ))}\n          </TextField>\n        </form>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Typography variant=\"body1\" align=\"center\">\n          Brewer\n        </Typography>\n        <form autoComplete=\"off\">\n          <TextField\n            className={classes.form}\n            id=\"outlined-select-brewer-native\"\n            select\n            value={brewer}\n            onChange={handleBrewerChange}\n            SelectProps={{\n              native: true,\n            }}\n            variant=\"outlined\"\n          >\n            {brewerOptions.map(({ name, value }) => (\n              <option value={value} key={name}>\n                {name}\n              </option>\n            ))}\n          </TextField>\n        </form>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Typography variant=\"body1\" align=\"center\">\n          Drink Type\n        </Typography>\n        <form autoComplete=\"off\">\n          <TextField\n            className={classes.form}\n            id=\"outlined-select-drink-type-native\"\n            select\n            value={drink}\n            onChange={handleDrinkTypeChange}\n            SelectProps={{\n              native: true,\n            }}\n            variant=\"outlined\"\n          >\n            {drinkOptions.map(({ name, value }) => (\n              <option value={value} key={name}>\n                {name}\n              </option>\n            ))}\n          </TextField>\n        </form>\n      </Grid>\n    </Grid>\n  );\n}\n\nMethodBrewerAndDrinkTypeInput.propTypes = coffeeEntryPropTypesShape;\n\nexport default MethodBrewerAndDrinkTypeInput;\n","/**\n * Helpers for the coffee entry input page.\n */\nimport { methodToBrewerMap, methodToDrinkMap } from '../../../temp_db.js';\n\n/**\n * Gets the correct brewers based on the method selected\n */\nexport const getBrewerOptions = (methodValue) => {\n  return methodToBrewerMap[methodValue];\n};\n\n/**\n * Gets the correct drink types based on the method selected\n */\nexport const getDrinkOptions = (methodValue) => {\n  return methodToDrinkMap[methodValue];\n};\n","/**\n * The Brew Info for a Coffee Entry. Contains:\n *   - Method\n *   - Drink Type (based off of Method selected)\n *   - Grinder\n *   - Water\n *   - Coffee in\n *   - Water in/out (depending upon brewing method)\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport AutocompleteWrapper from '../../helpers/autocomplete_container.js';\nimport MethodBrewerAndDrinkTypeInput from './method_brewer_drink_type_input.js';\nimport { coffeeEntryPropTypesShape } from '../../../../consts.js';\nimport { waterData, grinderData } from '../../../../temp_db.js';\n\nfunction BrewInfoInput({ coffeeEntry, setCoffeeEntry }) {\n  const { brew } = coffeeEntry;\n  const { grind } = brew;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleGrinderChange = (grinder) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        grind: {\n          ...grind,\n          grinder,\n        },\n      },\n    });\n  };\n\n  const handleGrindSettingChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        grind: {\n          ...grind,\n          setting: parseInt(e.target.value),\n        },\n      },\n    });\n  };\n\n  const handleWaterChange = (water) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        water,\n      },\n    });\n  };\n\n  const handleInChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        coffee_in: parseInt(e.target.value),\n      },\n    });\n  };\n\n  const handleOutChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      brew: {\n        ...brew,\n        out: parseInt(e.target.value),\n      },\n    });\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" align=\"center\">\n          Brew Info\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <MethodBrewerAndDrinkTypeInput\n              coffeeEntry={coffeeEntry}\n              setCoffeeEntry={setCoffeeEntry}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"body1\" align=\"center\">\n              Grinder\n            </Typography>\n            <AutocompleteWrapper\n              fieldName=\"grinder\"\n              onChange={handleGrinderChange}\n              options={grinderData}\n              textField={(params) => (\n                <TextField\n                  {...params}\n                  className={classes.form}\n                  id=\"outlined-text-field-origin\"\n                  label=\"Grinder\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"body1\" align=\"center\">\n              Grind Setting\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Grind Setting\"\n                variant=\"outlined\"\n                onChange={handleGrindSettingChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"body1\" align=\"center\">\n              Water\n            </Typography>\n            <AutocompleteWrapper\n              fieldName=\"water\"\n              onChange={handleWaterChange}\n              options={waterData}\n              textField={(params) => (\n                <TextField\n                  {...params}\n                  className={classes.form}\n                  id=\"outlined-text-field-origin\"\n                  label=\"Water\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item xs={4}>\n                <Typography variant=\"body1\" align=\"center\">\n                  In\n                </Typography>\n                <form autoComplete=\"off\">\n                  <TextField\n                    className={classes.formInOut}\n                    id=\"outlined-basic\"\n                    label=\"In (g)\"\n                    variant=\"outlined\"\n                    onChange={handleInChange}\n                  />\n                </form>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography variant=\"body1\" align=\"center\">\n                  Out\n                </Typography>\n                <form autoComplete=\"off\">\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"Out (g)\"\n                    variant=\"outlined\"\n                    onChange={handleOutChange}\n                  />\n                </form>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nBrewInfoInput.propTypes = coffeeEntryPropTypesShape;\n\nexport default BrewInfoInput;\n","/**\n * The Rating for a Coffee Entry.\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { coffeeEntryPropTypesShape } from '../../../consts.js';\nimport { ratingsInputData } from '../../../temp_db.js';\n\nfunction RatingInput({ coffeeEntry, setCoffeeEntry }) {\n  const { rating } = coffeeEntry;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '100px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleRatingChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      rating: parseInt(e.target.value),\n    });\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" align=\"center\">\n          Rating\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-select-rating-native\"\n                select\n                value={rating}\n                onChange={handleRatingChange}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"outlined\"\n              >\n                {ratingsInputData.map(({ name, value }) => (\n                  <option value={value} key={name}>\n                    {name}\n                  </option>\n                ))}\n              </TextField>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nRatingInput.propTypes = coffeeEntryPropTypesShape;\n\nexport default RatingInput;\n","/**\n * The Notes for a Coffee Entry. Is basically just a space for the user to write notes on the brew overall or whatever they're feeling.\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { coffeeEntryPropTypesShape } from '../../../consts.js';\n\nfunction NotesInput({ coffeeEntry, setCoffeeEntry }) {\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '250px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleNoteChange = (e) => {\n    setCoffeeEntry({\n      ...coffeeEntry,\n      note: e.target.value,\n    });\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12}>\n        <Typography variant=\"h6\" align=\"center\">\n          Notes\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              className={classes.form}\n              onChange={handleNoteChange}\n              id=\"outlined-textarea\"\n              label=\"Notes\"\n              placeholder=\"Placeholder\"\n              multiline\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nNotesInput.propTypes = coffeeEntryPropTypesShape;\n\nexport default NotesInput;\n","/**\n * The form to input a new Coffee Entry.\n */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport GeneralInfoInput from './inputs/general_info_input.js';\nimport CoffeeInfoInput from './inputs/coffee_info_input.js';\nimport BrewInfoInput from './inputs/brew_info/brew_info_input.js';\nimport RatingInput from './inputs/rating_input.js';\nimport NotesInput from './inputs/notes_input.js';\nimport logo from '../../media/icons/coffee-icon.png';\nimport { defaultCoffeeEntry } from '../../consts.js';\n\nfunction CoffeeDataEntryContainer() {\n  const useStyles = makeStyles((theme) => ({\n    page: {\n      backgroundColor: '#EEEEEE',\n      minHeight: '100vh',\n    },\n    section: {\n      maxWidth: '800px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  // State used for the entire entry form\n  const [coffeeEntry, setCoffeeEntry] = useState(defaultCoffeeEntry);\n\n  const sections = [\n    {\n      component: (\n        <GeneralInfoInput\n          coffeeEntry={coffeeEntry}\n          setCoffeeEntry={setCoffeeEntry}\n        />\n      ),\n      name: 'General Info',\n    },\n    {\n      component: (\n        <CoffeeInfoInput\n          coffeeEntry={coffeeEntry}\n          setCoffeeEntry={setCoffeeEntry}\n        />\n      ),\n      name: 'Coffee Info',\n    },\n    {\n      component: (\n        <BrewInfoInput\n          coffeeEntry={coffeeEntry}\n          setCoffeeEntry={setCoffeeEntry}\n        />\n      ),\n      name: 'Brew Info',\n    },\n    {\n      component: (\n        <RatingInput\n          coffeeEntry={coffeeEntry}\n          setCoffeeEntry={setCoffeeEntry}\n        />\n      ),\n      name: 'Rating',\n    },\n    {\n      component: (\n        <NotesInput coffeeEntry={coffeeEntry} setCoffeeEntry={setCoffeeEntry} />\n      ),\n      name: 'Notes',\n    },\n  ];\n\n  const handleSubmit = () => {\n    // TODO: save the coffee entry\n    return;\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      className={classes.page}\n    >\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h2\">New Coffee Entry</Typography>\n        </Box>\n      </Grid>\n      {sections.map(({ component, name }) => (\n        <Box p={2} className={classes.section} key={name}>\n          <Grid item xs={12}>\n            {component}\n          </Grid>\n        </Box>\n      ))}\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default CoffeeDataEntryContainer;\n","/**\n * A new coffee input, allowing the user to write to the DB\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport logo from '../../media/icons/coffee-icon.png';\nimport { processData } from '../../temp_db.js';\n\nfunction NewCoffeeInput({ dataEntry, setDataEntry }) {\n  const { coffee } = dataEntry;\n  const { process_id } = coffee;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  const handleNameChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      coffee: {\n        ...coffee,\n        name: e.target.value,\n      },\n    });\n  };\n\n  const handleRoasterIdChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      coffee: {\n        ...coffee,\n        roaster_id: parseInt(e.target.value),\n      },\n    });\n  };\n\n  const handleOriginIdChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      coffee: {\n        ...coffee,\n        origin_id: parseInt(e.target.value),\n      },\n    });\n  };\n\n  const handleProcessIdChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      coffee: {\n        ...coffee,\n        process_id: parseInt(e.target.value),\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(coffee);\n    return;\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h6\">New Coffee</Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Name\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Name\"\n                variant=\"outlined\"\n                onChange={handleNameChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Roaster\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Roaster\"\n                variant=\"outlined\"\n                onChange={handleRoasterIdChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Origin\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Origin\"\n                variant=\"outlined\"\n                onChange={handleOriginIdChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Process\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-select-process-native\"\n                select\n                value={process_id}\n                onChange={handleProcessIdChange}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"outlined\"\n              >\n                {processData.map(({ name, value }) => (\n                  <option value={value} key={name}>\n                    {name}\n                  </option>\n                ))}\n              </TextField>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NewCoffeeInput;\n","/**\n * A new origin input, allowing the user to write to the DB\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport logo from '../../media/icons/coffee-icon.png';\n\nfunction NewOriginInput({ dataEntry, setDataEntry }) {\n  const { origin } = dataEntry;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  const handleNameChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      origin: {\n        ...origin,\n        name: e.target.value,\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(origin);\n    return;\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h6\">New Origin</Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"body1\" align=\"center\">\n          Name\n        </Typography>\n        <form autoComplete=\"off\">\n          <TextField\n            className={classes.form}\n            id=\"outlined-basic\"\n            label=\"Origin Name\"\n            variant=\"outlined\"\n            onChange={handleNameChange}\n          />\n        </form>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NewOriginInput;\n","/**\n * A new coffee input, allowing the user to write to the DB\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport logo from '../../media/icons/coffee-icon.png';\n\nfunction NewRoasterInput({ dataEntry, setDataEntry }) {\n  const { roaster } = dataEntry;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  const handleNameChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      roaster: {\n        ...roaster,\n        name: e.target.value,\n      },\n    });\n  };\n\n  const handleCityChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      roaster: {\n        ...roaster,\n        city: e.target.value,\n      },\n    });\n  };\n\n  const handleStateChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      roaster: {\n        ...roaster,\n        state: e.target.value,\n      },\n    });\n  };\n\n  const handleCountryChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      roaster: {\n        ...roaster,\n        country: e.target.value,\n      },\n    });\n  };\n\n  const handleWebsiteChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      roaster: {\n        ...roaster,\n        website: e.target.value,\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(roaster);\n    return;\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h6\">New Roaster</Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Name\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Name\"\n                variant=\"outlined\"\n                onChange={handleNameChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              City\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"City\"\n                variant=\"outlined\"\n                onChange={handleCityChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              State\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"State\"\n                variant=\"outlined\"\n                onChange={handleStateChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Country\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Contry\"\n                variant=\"outlined\"\n                onChange={handleCountryChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Website\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Website\"\n                variant=\"outlined\"\n                onChange={handleWebsiteChange}\n              />\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NewRoasterInput;\n","/**\n * A new brewer input, allowing the user to write to the DB\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport logo from '../../media/icons/coffee-icon.png';\nimport { methodData } from '../../temp_db.js';\n\nfunction NewBrewerInput({ dataEntry, setDataEntry }) {\n  const { brewer } = dataEntry;\n  const { method_id } = brewer;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  const handleNameChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      brewer: {\n        ...brewer,\n        name: e.target.value,\n      },\n    });\n  };\n\n  const handleWebsiteChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      brewer: {\n        ...brewer,\n        website: e.target.value,\n      },\n    });\n  };\n\n  const handleMethodIdChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      brewer: {\n        ...brewer,\n        method_id: parseInt(e.target.value),\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(brewer);\n    return;\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h6\">New Brewer</Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Name\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Brewer Name\"\n                variant=\"outlined\"\n                onChange={handleNameChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Website\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Brewer Website\"\n                variant=\"outlined\"\n                onChange={handleWebsiteChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Method\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-select-process-native\"\n                select\n                value={method_id}\n                onChange={handleMethodIdChange}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"outlined\"\n              >\n                {methodData.map(({ name, value }) => (\n                  <option value={value} key={name}>\n                    {name}\n                  </option>\n                ))}\n              </TextField>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NewBrewerInput;\n","/**\n * A new brewer input, allowing the user to write to the DB\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport logo from '../../media/icons/coffee-icon.png';\n\nfunction NewWaterInput({ dataEntry, setDataEntry }) {\n  const { water } = dataEntry;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  const handleNameChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      water: {\n        ...water,\n        name: e.target.value,\n      },\n    });\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      water: {\n        ...water,\n        description: e.target.value,\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(water);\n    return;\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h6\">New Water</Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box pb={1}>\n          <Typography variant=\"body1\" align=\"center\">\n            Name\n          </Typography>\n          <form autoComplete=\"off\">\n            <TextField\n              className={classes.form}\n              id=\"outlined-basic\"\n              label=\"Water Name\"\n              variant=\"outlined\"\n              onChange={handleNameChange}\n            />\n          </form>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box pt={1}>\n          <Typography variant=\"body1\" align=\"center\">\n            Description\n          </Typography>\n          <form autoComplete=\"off\">\n            <TextField\n              className={classes.form}\n              onChange={handleDescriptionChange}\n              id=\"outlined-textarea\"\n              label=\"Short description\"\n              placeholder=\"Placeholder\"\n              multiline\n              variant=\"outlined\"\n            />\n          </form>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NewWaterInput;\n","/**\n * A new grinder input, allowing the user to write to the DB\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport logo from '../../media/icons/coffee-icon.png';\n\nfunction NewGrinderInput({ currentGrinders, dataEntry, setDataEntry }) {\n  const { grinder } = dataEntry;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  const handleNameChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      grinder: {\n        ...grinder,\n        name: e.target.value,\n      },\n    });\n  };\n\n  const handleWebsiteChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      brewer: {\n        ...grinder,\n        website: e.target.value,\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(grinder);\n    return;\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h6\">New Brewer</Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Name\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Grinder Name\"\n                variant=\"outlined\"\n                onChange={handleNameChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Website\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Grinder Website\"\n                variant=\"outlined\"\n                onChange={handleWebsiteChange}\n              />\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NewGrinderInput;\n","/**\n * A new drink input, allowing the user to write to the DB\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport logo from '../../media/icons/coffee-icon.png';\nimport { methodData } from '../../temp_db.js';\n\nfunction NewDrinkInput({ dataEntry, setDataEntry }) {\n  const { drink } = dataEntry;\n  const { method_id } = drink;\n  const useStyles = makeStyles(() => ({\n    form: {\n      width: '200px',\n    },\n    submitButton: {\n      background: 'linear-gradient(45deg, grey 30%, #DC7633 90%)',\n      color: 'black',\n      '&:hover': {\n        color: 'white',\n        background: 'linear-gradient(45deg, #DC7633 30%, grey 90%)',\n      },\n    },\n  }));\n\n  const coffeeIcon = (\n    <Box p={1} display=\"flex\" justifyContent=\"center\">\n      <img width={30} src={logo} alt=\"Coffee Logo\" />\n    </Box>\n  );\n\n  const classes = useStyles();\n\n  const handleNameChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      drink: {\n        ...drink,\n        name: e.target.value,\n      },\n    });\n  };\n\n  const handleMethodIdChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      drink: {\n        ...drink,\n        method_id: parseInt(e.target.value),\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    console.log(drink);\n    return;\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Typography variant=\"h6\">New Brewer</Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container align=\"center\" justify=\"center\" spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Name\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-basic\"\n                label=\"Drink Name\"\n                variant=\"outlined\"\n                onChange={handleNameChange}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\" align=\"center\">\n              Method\n            </Typography>\n            <form autoComplete=\"off\">\n              <TextField\n                className={classes.form}\n                id=\"outlined-select-method-native\"\n                select\n                value={method_id}\n                onChange={handleMethodIdChange}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"outlined\"\n              >\n                {methodData.map(({ name, value }) => (\n                  <option value={value} key={name}>\n                    {name}\n                  </option>\n                ))}\n              </TextField>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Box p={4}>\n          <Button\n            startIcon={coffeeIcon}\n            endIcon={coffeeIcon}\n            className={classes.submitButton}\n            onClick={handleSubmit}\n          >\n            <Typography variant=\"body1\" align=\"center\">\n              Submit\n            </Typography>\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NewDrinkInput;\n","/**\n * The Data Entry Container, which will allow users (or just admins, tbd) to basically update DBs with new:\n *    - Roasters\n *    - Coffees\n *    - Origins\n *    - Processes (?)\n *    - Waters    (?)\n */\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { currentDataQuery } from '../../graphql/queries/data_entry_queries.js';\nimport NewCoffeeInput from './new_coffee_input.js';\nimport NewOriginInput from './new_origin_input.js';\nimport NewRoasterInput from './new_roaster_input.js';\nimport NewBrewerInput from './new_brewer_input.js';\nimport NewWaterInput from './new_water_input.js';\nimport NewGrinderInput from './new_grinder_input.js';\nimport NewDrinkInput from './new_drink_input.js';\nimport {\n  roasterEnum,\n  coffeeEnum,\n  originEnum,\n  brewerEnum,\n  waterEnum,\n  drinkEnum,\n  grinderEnum,\n  currentDataDefault,\n  dataEntryDefault,\n} from '../../consts.js';\n\nfunction DataEntryContainer() {\n  // State used for determining which data entry component to show.\n  const [dataEntry, setDataEntry] = useState(dataEntryDefault);\n\n  // State that basically contains all the current info\n  const [currentData, setCurrentData] = useState(currentDataDefault);\n\n  // When the component renders, we fetch all the current data\n  useEffect(() => {\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({ query: currentDataQuery }),\n    })\n      .then((r) => r.json())\n      .then(({ data }) => {\n        console.log(data);\n        if (data) {\n          setCurrentData(data);\n        }\n      });\n  }, []);\n\n  const handleDataOptionChange = (e) => {\n    setDataEntry({\n      ...dataEntry,\n      dataOption: e.target.value,\n    });\n  };\n\n  const { dataOption } = dataEntry;\n  const {\n    brewers,\n    coffees,\n    drinks,\n    grinders,\n    origins,\n    roasters,\n    waters,\n  } = currentData;\n\n  const getDataEntryForm = () => {\n    switch (dataOption) {\n      case brewerEnum:\n        return (\n          <NewBrewerInput\n            currentBrewers={brewers}\n            dataEntry={dataEntry}\n            setDataEntry={setDataEntry}\n          />\n        );\n      case coffeeEnum:\n        return (\n          <NewCoffeeInput\n            currentCoffees={coffees}\n            dataEntry={dataEntry}\n            setDataEntry={setDataEntry}\n          />\n        );\n      case drinkEnum:\n        return (\n          <NewDrinkInput\n            currentDrinks={drinks}\n            dataEntry={dataEntry}\n            setDataEntry={setDataEntry}\n          />\n        );\n      case grinderEnum:\n        return (\n          <NewGrinderInput\n            currentGrinders={grinders}\n            dataEntry={dataEntry}\n            setDataEntry={setDataEntry}\n          />\n        );\n      case originEnum:\n        return (\n          <NewOriginInput\n            currentOrigins={origins}\n            dataEntry={dataEntry}\n            setDataEntry={setDataEntry}\n          />\n        );\n      case roasterEnum:\n        return (\n          <NewRoasterInput\n            currentRoasters={roasters}\n            dataEntry={dataEntry}\n            setDataEntry={setDataEntry}\n          />\n        );\n      case waterEnum:\n        return (\n          <NewWaterInput\n            currentWaters={waters}\n            dataEntry={dataEntry}\n            setDataEntry={setDataEntry}\n          />\n        );\n\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <Box>\n      <Box py={4}>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <Box p={4}>\n              <Typography variant=\"h4\">Enter Data</Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"dataOptions\"\n                name=\"dataOptions\"\n                value={dataOption}\n                onChange={handleDataOptionChange}\n              >\n                <Grid container align=\"center\" justify=\"center\" spacing={2}>\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      value={originEnum}\n                      control={<Radio />}\n                      label=\"Origin\"\n                      labelPlacement=\"bottom\"\n                    />\n                    <FormControlLabel\n                      value={roasterEnum}\n                      control={<Radio />}\n                      label=\"Roaster\"\n                      labelPlacement=\"bottom\"\n                    />\n                    <FormControlLabel\n                      value={coffeeEnum}\n                      control={<Radio />}\n                      label=\"Coffee\"\n                      labelPlacement=\"bottom\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      value={brewerEnum}\n                      control={<Radio />}\n                      label=\"Brewer\"\n                      labelPlacement=\"bottom\"\n                    />\n                    <FormControlLabel\n                      value={waterEnum}\n                      control={<Radio />}\n                      label=\"Water\"\n                      labelPlacement=\"bottom\"\n                    />\n                    <FormControlLabel\n                      value={grinderEnum}\n                      control={<Radio />}\n                      label=\"Grinder\"\n                      labelPlacement=\"bottom\"\n                    />\n                    <FormControlLabel\n                      value={drinkEnum}\n                      control={<Radio />}\n                      label=\"Drink\"\n                      labelPlacement=\"bottom\"\n                    />\n                  </Grid>\n                </Grid>\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Divider variant=\"middle\" />\n      <Grid>\n        <Grid item xs={12}>\n          {getDataEntryForm()}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default DataEntryContainer;\n","/**\n * All GraphQL queries regarding the Data Entry Component.\n */\n\nexport const currentDataQuery = `\n  query {\n    brewers {\n      brewer_id\n      name\n      website\n      method_id\n    }\n    coffees {\n      coffee_id\n      name\n      roaster {\n        name\n        roaster_id\n      }\n      origin {\n        origin_id\n        name\n      }\n      process {\n        process_id\n        name\n      }\n    }\n    drinks {\n      drink_id\n      name\n      method_id\n    }\n    grinders {\n      grinder_id\n      name\n      website\n    }\n    methods {\n      method_id\n      name\n    }\n    origins {\n      origin_id\n      name\n    }\n    processes {\n      process_id\n      name\n    }\n    roasters {\n      roaster_id\n      name\n      city\n      state\n      country\n      website\n    }\n    waters {\n      water_id\n      name\n      description\n    }\n  }\n`;\n","/**\n * Top level component for the site.\n */\nimport React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TopNav from './nav/topnav.js';\nimport Home from './sections/home.js';\nimport Blog from './sections/blog.js';\nimport Coffee from './sections/coffee.js';\nimport Equipment from './sections/equipment.js';\nimport Data from './sections/data.js';\nimport CoffeeEntryInputContainer from './sections/coffee_entry/coffee_entry_container.js';\nimport DataEntryContainer from './sections/data_entry/data_entry_container.js';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: ['Roboto Condensed'].join(','),\n    },\n  });\n  // And this is more specific to what I like\n  theme.typography.h2 = {\n    fontSize: '3.75rem',\n    '@media (max-width:750px)': {\n      fontSize: '1.5rem',\n      fontWeight: '400',\n    },\n    fontWeight: '300',\n    lineHeight: '1.2',\n    fontFamily: ['Roboto Condensed'].join(','),\n    letterSpacing: '-0.00833em',\n  };\n\n  return (\n    <Router history={history}>\n      <ThemeProvider theme={theme}>\n        <TopNav />\n        <Switch>\n          <Route exact path=\"/coffee\">\n            <Coffee />\n          </Route>\n          <Route exact path=\"/data\">\n            <Data />\n          </Route>\n          <Route exact path=\"/equipment\">\n            <Equipment />\n          </Route>\n          <Route exact path=\"/blog\">\n            <Blog />\n          </Route>\n          <Route exact path=\"/data/coffee_entry\">\n            <CoffeeEntryInputContainer />\n          </Route>\n          <Route exact path=\"/data/entry\">\n            <DataEntryContainer />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/coffee-icon.cb024ff0.png\";"],"sourceRoot":""}